if not LPH_OBFUSCATED then
    LPH_JIT_MAX = function(...) return ... end
end

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local Workspace = workspace

-- Character
local character = workspace.Const.Ignore.LocalCharacter
local middle = character.Middle
local bottom = character.Bottom
local top = character.Top
local prism = top:FindFirstChild("Prism1")

if not prism then
    warn("Prism1 not found in character.Top")
    return
end

-- Store the original position of the neck part
local originalPrismCFrame = top.Prism1.CFrame

-- Variables
local longNeckEnabled = false
local freecamEnabled = false
local collisionToggle = false
local freecamOffset = Vector3.zero
local ClosestATV = nil
local speed = 55
local travel = Vector3.zero
local Enabled = false
local atvbypass = true
local hover_position = nil

local MIN_SPEED = 10
local MAX_SPEED = 150
local previousSpeed = 55
local isSpeedToggled = false
local atvFlyEnabled = false

-- ATV No Look Restriction
local trident = { gc = { camera = nil } }
LPH_JIT_MAX(function()
    for _, v in pairs(getgc(true)) do
        if type(v) == "table" and type(rawget(v, "SetMaxRelativeLookExtentsY")) == "function" then
            trident.gc.camera = v
        end
    end
end)()

task.spawn(function()
    while task.wait() do
        if trident.gc.camera then
            trident.gc.camera.SetMaxRelativeLookExtentsY(10000)
        end
    end
end)

-- ATV Collision Toggle / Noclip (F Key)
local function toggleATVCollision()
    if not ClosestATV then return end
    collisionToggle = not collisionToggle
    for _, part in ipairs(ClosestATV:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = collisionToggle
        end
    end
end

local function clampSpeed(value, min, max)
    return math.max(min, math.min(max, value))
end

local function adjustSpeed(amount)
    speed = clampSpeed(speed + amount, MIN_SPEED, MAX_SPEED)
end

local function toggleSpeed()
    if isSpeedToggled then
        speed = previousSpeed
    else
        previousSpeed = speed
        speed = 28
    end
    isSpeedToggled = not isSpeedToggled
end

-- Toggle Long Neck (L Key)
local function toggleLongNeck()
    longNeckEnabled = not longNeckEnabled

    if longNeckEnabled then
        -- Move the neck part downward
        top.Prism1.CFrame = originalPrismCFrame - Vector3.yAxis * 8
    else
        -- Reset to original position
        top.Prism1.CFrame = originalPrismCFrame
    end
end

-- Toggle Freecam (C Key)
local function toggleFreecam()
    freecamEnabled = not freecamEnabled
    middle.CanCollide = not freecamEnabled
    bottom.CanCollide = not freecamEnabled
    top.CanCollide = not freecamEnabled
end

-- ATV Fly (Z Key)
local function FlyHack()
    RunService.RenderStepped:Connect(function()
        if not Enabled then return end

        local plastics = ClosestATV and ClosestATV:FindFirstChild("Plastics")
        if plastics then
            plastics.Velocity = Vector3.zero

            local flip2 = ClosestATV.Frame:FindFirstChild("Flip2")
            if not flip2 then
                local newFlip = ClosestATV.Frame.Flip:Clone()
                newFlip.Name = "Flip2"
                newFlip.Enabled = true
                newFlip.Parent = ClosestATV.Frame
            else
                flip2.Enabled = true
            end

            if travel.Magnitude > 0 then
                plastics.Anchored = false
                plastics.Velocity = travel.Unit * speed
                hover_position = nil
            else
                if not hover_position then
                    hover_position = plastics.Position
                end
                plastics.Velocity = Vector3.zero
                plastics.Anchored = false
                plastics.Position = hover_position
            end
        end
    end)
end

-- Flip Bypass (Auto)
RunService.RenderStepped:Connect(function()
    for _, v in ipairs(Workspace:GetChildren()) do
        local frame = v:FindFirstChild("Frame")
        if frame then
            local flip = frame:FindFirstChild("Flip")
            if flip and atvbypass then
                flip.Enabled = true
                flip.RigidityEnabled = true
                flip.Responsiveness = math.huge
            end
        end
    end
end)

-- ATV Detection
local function GetClosestATV()
    local closest, dist = nil, 50
    for _, v in ipairs(Workspace:GetChildren()) do
        if v:FindFirstChild("Seat") and v:FindFirstChild("Frame") then
            local distance = (v.Frame.Position - middle.Position).Magnitude
            if distance < dist then
                closest, dist = v, distance
            end
        end
    end
    return closest
end

local function findATV()
    ClosestATV = GetClosestATV()
    Enabled = atvFlyEnabled
end

-- Keybinds
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end

    if input.KeyCode == Enum.KeyCode.L then
        toggleLongNeck()
    elseif input.KeyCode == Enum.KeyCode.F then
        toggleATVCollision()
    elseif input.KeyCode == Enum.KeyCode.Z then
        atvFlyEnabled = not atvFlyEnabled
        findATV()
    elseif input.KeyCode == Enum.KeyCode.C then
        toggleFreecam()
    elseif input.KeyCode == Enum.KeyCode.Q then
        toggleSpeed()
    end
end)

-- Movement for ATV Fly
RunService.RenderStepped:Connect(function()
    ClosestATV = GetClosestATV()

    if Enabled and ClosestATV then
        local cameralook = Camera.CFrame.LookVector
        cameralook = Vector3.new(cameralook.X, 0, cameralook.Z)

        travel = Vector3.zero
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then travel += cameralook end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then travel -= cameralook end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then travel += Vector3.new(-cameralook.Z, 0, cameralook.X) end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then travel += Vector3.new(cameralook.Z, 0, -cameralook.X) end
        if UserInputService:IsKeyDown(Enum.KeyCode.V) then travel += Vector3.yAxis end
        if UserInputService:IsKeyDown(Enum.KeyCode.B) then travel -= Vector3.yAxis end
    else
        travel = Vector3.zero
    end
end)

FlyHack()

-- Hitbox Expander (Auto)
local hitboxSize = 10
local cancollide = false

local function updateHitbox(character)
    local head = character:FindFirstChild("Head")
    if head then
        head.Size = Vector3.new(hitboxSize, hitboxSize, hitboxSize)
        head.Transparency = 0.5
        head.CanCollide = cancollide
    end
end

for _, obj in pairs(workspace:GetChildren()) do
    if obj:IsA("Model") and obj:FindFirstChild("Head") then
        updateHitbox(obj)
    end
end

workspace.ChildAdded:Connect(function(obj)
    if obj:IsA("Model") and obj:FindFirstChild("Head") then
        updateHitbox(obj)
    end
end)

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(updateHitbox)
end)
